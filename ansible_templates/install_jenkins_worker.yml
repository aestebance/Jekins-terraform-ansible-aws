---
- hosts: "{{ passed_in_hosts }}"
  become: yes
  remote_user: ec2-user
  tasks:
    - name: 1/13 - Generate SSH Keypair
      openssh_keypair:
        path: /home/ec2-user/.ssh/id_rsa
        type: rsa
        size: 2048
        group: ec2-user
        owner: ec2-user
    
    - name: 2/13 - Add own key to authorized_keys file
      shell: "cat /home/ec2-user/.ssh/id_rsa.pub >> /home/ec2-user/.ssh/authorized_keys && chmod 600 /home/ec2-user/.ssh/authorized_keys"

    - name: 3/13 - Copy over Jenkins Worker Node creation payload xml
      vars: 
        ipv4: "{{ ansible_default_ipv4.address }}"
      template:
        src: node.j2
        dest: /home/ec2-user/node.xml
        owner: ec2-user
        mode: '0644'

    - name: 4/13 - Read generated private key id_rsa
      slurp:
        src: /home/ec2-user/.ssh/id_rsa
      register: pkey

    - name: 5/13 - Copy over creds.xml and create Jenkins credential
      vars:
        priv_key: "{{ pkey['content'] | b64decode }}"
        ipv4: "{{ ansible_default_ipv4.address }}"
      template:
        src: cred-privkey.j2
        dest: /home/ec2-user/creds.xml

    - name: 6/13 - install dependencies
      yum:
        name: "{{ package }} "
      vars:
        package:
        - wget
        - git
        - maven
        - docker
    
    - name: 7/13 - install JDK 11
      command: amazon-linux-extras install java-openjdk11 -y
   
    - name: 8/13 - Get Jenkins CLI jar file
      vars:
        master: "{{ master_ip }}"
      get_url:
        url: "http://{{ master }}:8080/jnlpJars/jenkins-cli.jar"
        dest: /home/ec2-user/jenkins-cli.jar
        force: yes
      register: download
      ignore_errors: yes
      until: download.status_code|default(200) == 200
      retries: 5
      delay: 5
      
    - name: 9/13 - Allow execute perm to jenkins-cli.jar
      file:
        path: /home/ec2-user/jenkins-cli.jar
        owner: ec2-user
        group: ec2-user
        mode: '0777'
        
    - name: 10/13 - Place Jenkins Auth file
      copy:
        src: jenkins_auth
        dest: /home/ec2-user/
        owner: ec2-user
        mode: '0600'
    
    - name: 11/13 - Save master ip
      vars:
        master: "{{ master_ip }}"
      shell: "echo {{master}} > /home/ec2-user/master_ip"

    - name: 12/13 - Create Jenkins Credential
      vars:
        master: "{{ master_ip }}"
      shell: "cat /home/ec2-user/creds.xml | java -jar /home/ec2-user/jenkins-cli.jar -auth @/home/ec2-user/jenkins_auth -s http://{{master}}:8080 create-credentials-by-xml system::system::jenkins _"

    - name: 13/13 - Register node as worker
      vars:
        master: "{{ master_ip }}"
      shell: 'cat /home/ec2-user/node.xml | java -jar /home/ec2-user/jenkins-cli.jar -auth @/home/ec2-user/jenkins_auth -s http://{{ master }}:8080 create-node'